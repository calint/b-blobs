{var tick
inc(tick)
st(0x2010 tick)

var ln=252
var gln=0x4fb
var wi=4
var hi=5
var nl=0x0600

foo(labels){
  type(ptr dest c)
}
fow(labels){
  inc(c)
}

var lines=1
var dil=0x0420
var rgb=0xf00
lp(lines){
  var di
  tx(di dil)
  pl(di wi hi ln rgb)
  add(dil nl)
}
-1 -1
def baba[ch]{4   0xb 0xa 0xb 0xa}
def b20 [ch]{3   2 0 0xb}
def labels
[  ptr   dest     c   ]{2
  baba  0x7050  0xffe         
  b20   0x7070  0xff0
}
def bmp[d]{36  
  0x6ddd6 0x6e66f 0x6f36f 0x6373e 
  0x37df3 0xece3e 0x6ced6 0xff244 
  0x66fd6 0x6d724 0x6ddfd 0xedede
  0x6ccc7 0xeddde 0xfcecf 0xfcecc 

  0x6cdd7 0xddfdd 0xf666f 0xf666c
  0xdeddd 0xccccf 0xdfddd 0x9db99
  0x69996 0xedecc 0x699a5 0xe99a9
  0x68e1e 0xf4444 0x99996 0x99952

  0x99ff6 0x99699 0x99666 0xf34cf
  0       0       0       0
  0       0       0       0
  0       0       0       0

  0       0       0       0
  0       0       0       0
  0       0       0       0
  0       0       0       0
}
-1 -1
def type(ptr file colr){
  var length
  ldc(length ptr)
  lp(length){
    var glyph
    var ret
    var ch
    ldc(ch ptr)
    bmp.seek(ret ch)
    ld(glyph ret)
    type_bmp(file wi hi ln colr glyph)
    sub(file gln)
  }
}
def bmp.seek(return record){
  var temp=bmp
  tx(return temp)
  inc(return)
  add(return record)
}
def pl(di wi hi ln rgb){
  foo(bmp){
    type_bmp(di wi hi ln rgb d)
    sub(di gln)
    inc(rgb)
  }
}
def type_bmp(scr wi hi ln rgb bmp){
  lp(hi){
    lp(wi){
      shf(bmp -1)
      @ifn stc(scr rgb)
      @ifz inc(scr)
      @ifp inc(scr)
    }
    add(scr ln)
  }
}
}