@o{
var tick
inc(tick)

var di=6
var x=*di
drw(tick x)


def drw(tick p){
  st(0x5020 p)
  st(0x5021 tick)
  var n=4
  var di=0x4040
  var p=0
  lp(n){
    var h=*p++
    hex.print(di 4 5 252 0x4fb 0xf00 h)
    addi(di 1)
  }
}
st(0x2010 0xff0)
loop(tick)
def loop(tick){
  @const var wi=4
  @const var hi=5
  @const var ln=252
  @const var gnl=0x4fb
  @const var nl=0x0600
  labels.drw(wi hi ln gnl)
  hex.drw(wi hi ln gnl tick)
  font.drwall1(wi hi ln gnl tick 5)
  labels.upd()
}
-1
@v def hex.print(di wi hi ln gln argb hex){
  var msk=0xf0000
  var times=5
  lp(times){
    var h=hex
    and(h msk)
    shf(h 16)
    shf(hex -4)

    var ret font.seek(ret h)
    var glyph=*ret
    font.drw(di wi hi ln argb glyph)
    sub(di gln)
  }
}
@t @txt def baba[ch]{4   0xb 0xa 0xb 0xa}
@t @txt def b20 [ch]{3   2 0 0xb}
@v def txt.type(txt di rgb wi hi ln gln){
  @baba foo(txt){
    var chaddr font.seek(chaddr ch)
    var glyph=*chaddr
    font.drw(di wi hi ln rgb glyph)
    sub(di gln)
  }
}
@t def labels
[  txt   dest    rgb   ]{2
  baba  0x7050  0xffe         
  b20   0x7070  0xff0
  b20   0x7080  0xfff
}
@v def labels.drw(wi hi ln gln){
  foo(labels){
    txt.type(txt dest rgb wi hi ln gln)
  }
}
@v def labels.upd(){
  fow(labels){
    inc(rgb)
  }
}
@t def font[d]{36  
  0x6ddd6 0x6e66f 0x6f36f 0x6373e 
  0x37df3 0xece3e 0x6ced6 0xff244 
  0x66fd6 0x6d724 0x6ddfd 0xedede
  0x6ccc7 0xeddde 0xfcecf 0xfcecc 

  0x6cdd7 0xddfdd 0xf666f 0xf666c
  0xdeddd 0xccccf 0xdfddd 0x9db99
  0x69996 0xedecc 0x699a5 0xe99a9
  0x6861e 0xf4444 0x99996 0x99952

  0x99ff6 0x99699 0x99666 0xf24cf
  0       0       0       0
  0       0       0       0
  0       0       0       0

  0       0       0       0
  0       0       0       0
  0       0       0       0
  0       0       0       0
}
@v def font.drwall1(wi hi nl gln rgb lines){
  var dil=0x0420
  lp(lines){
    var di=dil
    font.drwall(di wi hi nl rgb gln)
    add(dil nl)
  }
}
-1 -1
@v def font.drw(di wi hi ln rgb bmp){
  lp(hi){
    lp(wi){
      shf(bmp -1)
      @ifn stc(di rgb)
      @ifz inc(di)
      @ifp inc(di)
    }
    add(di ln)
  }
}
@v def font.drwall(di wi hi ln rgb gln){
  foo(font){
    font.drw(di wi hi ln rgb d)
    sub(di gln)
    inc(rgb)
  }
}
@* def font.seek(ret record){
  var temp=font
  ret=temp
  inc(ret)
  add(ret record)
}
@v def hex.drw(wi hi ln gln rgb){
  var di=0x2464
  var h=0xb00b0
  hex.print(di wi hi ln gln rgb h)
}
@c def rgb.red 0xf00
@c def rgb.green 0x0f0
@c def rgb.blue 0x00f
@c def rgb.yellow 0xff0
}