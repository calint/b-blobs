@o{
var tick
inc(tick)
var addr=0x2010
st(addr tick)

@const var ln=252
@const var gln=0x4fb
@const var wi=4
@const var hi=5
@const var nl=0x0600
var dii=0x6050
var argb=0xf00
var h=0xb00b0
print_hex(dii wi hi ln argb h)
argb=0x0f0
h=0x0baba
print_hex(dii wi hi ln argb h)

foo(labels){
  type(ptr dest rgb)
}
fow(labels){
  inc(rgb)
}

var lines=1
var dil=0x0420
lp(lines){
  var di=dil
  pl(di wi hi ln argb)
  add(dil nl)
}
-1 -1
@str def baba[ch]{4   0xb 0xa 0xb 0xa}
@str def b20 [ch]{3   2 0 0xb}
@table def labels
[  ptr   dest    rgb   ]{2
  baba  0x7050  0xffe         
  b20   0x7070  0xff0
}
@font:4x5 def bmp[d]{36  
  0x6ddd6 0x6e66f 0x6f36f 0x6373e 
  0x37df3 0xece3e 0x6ced6 0xff244 
  0x66fd6 0x6d724 0x6ddfd 0xedede
  0x6ccc7 0xeddde 0xfcecf 0xfcecc 

  0x6cdd7 0xddfdd 0xf666f 0xf666c
  0xdeddd 0xccccf 0xdfddd 0x9db99
  0x69996 0xedecc 0x699a5 0xe99a9
  0x6861e 0xf4444 0x99996 0x99952

  0x99ff6 0x99699 0x99666 0xf24cf
  0       0       0       0
  0       0       0       0
  0       0       0       0

  0       0       0       0
  0       0       0       0
  0       0       0       0
  0       0       0       0
}
-1 -1
@inline def type_bmp(scr wi hi ln rgb bmp){
  lp(hi){
    lp(wi){
      shf(bmp -1)
      @ifn stc(scr rgb)
      @ifz inc(scr)
      @ifp inc(scr)
    }
    add(scr ln)
  }
}
@inline def pl(di wi hi ln rgb){
  foo(bmp){
    type_bmp(di wi hi ln rgb d)
    sub(di gln)
    inc(rgb)
  }
}
@inline def type(ptr file rgb){
  var length
  ldc(length ptr)
  lp(length){
    var glyph
    var ret
    var ch
    ldc(ch ptr)
    bmp.seek(ret ch)
    ld(glyph ret)
    type_bmp(file wi hi ln rgb glyph)
    sub(file gln)
  }
}
@inline:ptr def bmp.seek(return record){
  var temp=bmp
  return=temp
  inc(return)
  add(return record)
}
@inline def print_hex(di wi hi ln argb in){
  var msk=0xf0000
  var times=5
  lp(times){
    var hex=in
    and(hex msk)
    shf(hex 16)
    shf(in -4)

    var ret
    bmp.seek(ret hex)
    var glyph
    ld(glyph ret)
    type_bmp(di wi hi ln argb glyph)
    sub(di gln)
  }
}
@color def yello 0xff0
}